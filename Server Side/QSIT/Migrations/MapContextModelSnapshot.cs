// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QSIT.Models;

#nullable disable

namespace QSIT.Migrations
{
    [DbContext(typeof(MapContext))]
    partial class MapContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("QSIT.Models.MapSettings", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<float>("ClusterRadius")
                        .HasColumnType("real");

                    b.Property<float>("Duration")
                        .HasColumnType("real");

                    b.Property<bool>("GeoFencing")
                        .HasColumnType("bit");

                    b.Property<float>("LocationBuffer")
                        .HasColumnType("real");

                    b.Property<string>("MapSubType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MapType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("TimeBuffer")
                        .HasColumnType("real");

                    b.HasKey("ID");

                    b.ToTable("MapSettings");
                });
#pragma warning restore 612, 618
        }
    }
}
